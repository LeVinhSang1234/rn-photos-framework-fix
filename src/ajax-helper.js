import NativeApi from"./index";export function postAssets(e,{url:t,method:s,onProgress:o,onComplete:r,onError:a,onFinnished:n,modifyAssetData:p,headers:l}){let i,u={},d=[];const c=t=>{if(o){u[t.asset.uri]=t;const s=Object.keys(u).reduce((e,t)=>{return e+u[t].percentComplete},0),r=Math.ceil(s/e.length);if(i&&i===r)return;o(i=r,u)}},m=(t,s,o,p)=>{d.push({asset:t,status:s,responseText:o,xhr:p}),200===s?r&&r(t,s,o,p):a&&a(t,s,o,p),d.length===e.length&&n&&n(d)};return(e=>new Promise((t,s)=>{const o=e.filter(e=>void 0===e.resourcesMetadata);o.length?NativeApi.getAssetsResourcesMetadata(o.map(e=>e.localIdentifier)).then(s=>{o.forEach(e=>{Object.assign(e,s[e.localIdentifier])}),t(e)}):t(e)}))(e).then(e=>{return Promise.all(e.map(e=>{const t=e.resourcesMetadata[0];let s={uri:e.uri,name:t.originalFilename,type:t.mimeType};return p&&(s=p(s,e,t)),s}).map(e=>postAsset(e,{url:t,method:s,headers:l,onProgress:c,onComplete:m,onError:m})))})}export function postAsset(e,{url:t,method:s,headers:o,onProgress:r,onComplete:a,onError:n}){return new Promise((p,l)=>{const i=new FormData;i.append("asset",e);const u=new XMLHttpRequest;let d;u.upload.onprogress=(t=>{if(t.lengthComputable){const s=Math.ceil(t.loaded/t.total*100);if(d&&s===d)return;d=s,r({asset:e,percentComplete:s,loaded:t.loaded,total:t.total})}}),u.open(void 0!==s?s:"POST",t),u.send(i),u.onreadystatechange=(t=>{1===u.readyState&&o&&Object.keys(o).map(e=>{u.setRequestHeader(e,o[e])}),4===u.readyState&&(200===u.status?(a(e,u.status,u.responseText,u),p({postableAsset:e,status:u.status,responseText:u.responseText,xhr:u})):(n(e,u.status,u.responseText,u),l({postableAsset:e,status:u.status,responseText:u.responseText,xhr:u})))})})}