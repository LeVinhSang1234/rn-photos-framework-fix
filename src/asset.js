import{NativeModules,Platform,NativeEventEmitter}from"react-native";import uuidGenerator from"./uuid-generator";const RNPFManager=NativeModules.RNPFManager;if(!RNPFManager&&"ios"===Platform.OS)throw new Error("Could not find rn-photos-framework's native module. It seems it's not linked correctly in your xcode-project.");export default class Asset{static scheme="photos://";constructor(t){Object.assign(this,t),this._assetObj=t,this.nativeEventEmitter=new NativeEventEmitter(NativeModules.RNPFManager)}get uri(){if(this.lastOptions===this.currentOptions&&this._uri)return this._uri;let t;return this.currentOptions&&(this.lastOptions=this.currentOptions,t=this.serialize(this.currentOptions)),this._uri=Asset.scheme+this.localIdentifier,t&&(this._uri=this._uri+`?${t}`),this._uri}get image(){if(this._imageRef)return this._imageRef;const{width:t,height:e,uri:s}=this;return this._imageRef={width:t,height:e,uri:s,name:"test.jpg"},this._imageRef}get creationDate(){return this.toJsDate("creationDateUTCSeconds","_creationDate")}get modificationDate(){return this.toJsDate("modificationDateUTCSeconds","_modificationDate")}toJsDate(t,e){if(this[t]){if(!this[e]){const s=this[t];this[e]=new Date(0),this[e].setUTCSeconds(s)}return this[e]}}getMetadata(){return this._fetchExtraData("getAssetsMetadata","creationDate")}refreshMetadata(){return this._fetchExtraData("getAssetsMetadata","creationDate",!0)}getResourcesMetadata(){return this._fetchExtraData("getAssetsResourcesMetadata","resourcesMetadata")}getAssetsResourcesMetadata(t){return RNPFManager.getAssetsResourcesMetadata(t)}getAssetsMetadata(t){return RNPFManager.getAssetsMetadata(t)}_fetchExtraData(t,e,s){return new Promise(((i,r)=>{if(s||!this[e])return i(this[t]([this.localIdentifier]).then((t=>(t&&t[this.localIdentifier]&&Object.assign(this,t[this.localIdentifier]),this))));i(this)}))}serialize(t){var e=[];for(var s in t)t.hasOwnProperty(s)&&e.push(encodeURIComponent(s)+"="+encodeURIComponent(t[s]));return e.join("&")}withOptions(t){return this.currentOptions=t,this}delete(){return RNPFManager.deleteAssets([this.localIdentifier])}setHidden(t){return this._updateProperty("hidden",t,!0)}setFavorite(t){return this._updateProperty("favorite",t,!0)}setCreationDate(t){return this._updateProperty("creationDate",t,!1)}setLocation(t){return this._updateProperty("location",t,!1)}updateAssetsWithResoucesMetadata(t){return new Promise(((e,s)=>{const i=t.filter((t=>void 0===t.resourcesMetadata));i.length?RNPFManager.getAssetsResourcesMetadata(i.map((t=>t.localIdentifier))).then((s=>{i.forEach((t=>{Object.assign(t,s[t.localIdentifier])})),e(t)})):e(t)}))}saveAssetToDisk(t,e,s){const{args:i}=this.withUniqueEventListener("onSaveAssetsToFileProgress",{},e),r=[{asset:this,options:{onProgress:e}}];return this.updateAssetsWithResoucesMetadata(r.map((t=>t.asset))).then((()=>RNPFManager.saveAssetsToDisk({media:r.map((t=>{const{asset:e}=t,i=t.asset.resourcesMetadata[0];return{fileName:void 0!==s?s(t.asset,i):i.originalFilename,...i,uri:e.uri,localIdentifier:e.localIdentifier,mediaType:e.mediaType,...t.options}})),events:{onSaveAssetsToFileProgress:i.onSaveAssetsToFileProgress}})))}withUniqueEventListener(t,e,s){let i;return s&&(e[t]=uuidGenerator(),i=this.nativeEventEmitter.addListener(t,(i=>{s&&i.id&&i.id===e[t]&&s(i)}))),{args:e,unsubscribe:i}}_updateProperty(t,e,s){return new Promise((i=>{if(s&&this[t]===e)return i({success:!0,error:""});const r={[this.localIdentifier]:{[t]:e}},a=Object.keys(r);return RNPFManager.updateAssets(a,r).then((t=>t))}))}}