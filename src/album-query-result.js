import Album from"./album";import AlbumQueryResultBase from"./album-query-result-base";import{collectionArrayObserverHandler}from"./change-observer-handler";import{NativeModules,Platform}from"react-native";const RNPFManager=NativeModules.RNPFManager;if(!RNPFManager&&"ios"===Platform.OS)throw new Error("Could not find rn-photos-framework's native module. It seems it's not linked correctly in your xcode-project.");export default class AlbumQueryResult extends AlbumQueryResultBase{constructor(e,t,s){super(),this.eventEmitter=s,this._fetchParams=t||{},Object.assign(this,e),this._albumNativeObjs=this.albums,this.albums=this._albumNativeObjs.map((e=>new Album(e,this._fetchParams.assetFetchOptions,s))),s.addListener("onObjectChange",(e=>{this._cacheKey===e._cacheKey&&this.emit("onChange",e,(t=>{this.applyChangeDetails(e,t)}),this)}))}stopTracking(){return new Promise(((e,t)=>{if(this._cacheKey)return e(RNPFManager.stopTracking(this._cacheKey));e({success:!0,status:"was-not-tracked"})}))}applyChangeDetails(e,t){return collectionArrayObserverHandler(e,this.albums,(e=>new Album(e,this._fetchParams.fetchOptions,this.eventEmitter))).then((e=>{this.albums=e,t&&t(this)}))}}